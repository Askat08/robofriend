{"version":3,"sources":["reducers.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/ErrorBoundry.js","components/Scroll.js","actions.js","constants.js","containers/App.js","index.js"],"names":["intialStateSearch","searchField","intialStateRobots","isPending","robots","error","Card","props","className","alt","src","id","name","email","CardList","map","user","i","key","SearchBox","searchChange","onChange","type","placeholder","ErrorBoundry","state","hasError","info","this","setState","children","Component","Scroll","style","overflow","border","height","requestRobots","dispatch","fetch","then","response","json","data","payload","catch","App","onRequestRobots","onSearchChange","filteredRobots","filter","robot","toLowerCase","includes","connect","searchRobots","e","target","value","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fedbd23a.chunk.js","sourcesContent":["import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED\n} from \"./constants.js\";\n\nconst intialStateSearch = {\n  searchField: \"\"\n};\n\nexport const searchRobots = (state = intialStateSearch, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return Object.assign({}, state, { searchField: action.payload });\n    default:\n      return state;\n  }\n};\n\nconst intialStateRobots = {\n  isPending: false,\n  robots: [],\n  error: \"\"\n};\n\nexport const requestRobots = (state = intialStateRobots, action = {}) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, { isPending: true });\n    case REQUEST_ROBOTS_SUCCESS:\n      return Object.assign({}, state, {\n        robots: action.payload,\n        isPending: false\n      });\n    case REQUEST_ROBOTS_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: false\n      });\n    default:\n      return state;\n  }\n};\n","import React from 'react';\n\nconst Card = (props) => {\n  return (\n    <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n      <img alt='robot' src={`https://robohash.org/${props.id}?200x200`}></img>\n      <div>\n        <h2>{props.name}</h2>\n        <p>{props.email}</p>\n      </div>\n    </div>\n  );\n} \n\nexport default Card;","import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({ robots }) => {\n  return (\n    <div>\n      {robots.map((user, i) => {\n        return (\n          <Card\n            key={i}\n            id={robots[i].id}\n            name={robots[i].name}\n            email={robots[i].email}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from \"react\";\n\nconst SearchBox = ({ searchField, searchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        onChange={searchChange}\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"search robots\"\n      ></input>\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React, { Component } from \"react\";\n\nclass ErrorBoundry extends Component {\n  constructor() {\n    super();\n    this.state = {\n      hasError: false\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Oooops. Something went wrong.</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundry;\n","import React from \"react\";\n\nconst Scroll = props => {\n  return (\n    <div\n      style={{ overflow: \"scroll\", border: \"1px solid black\", height: \"500px\" }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED\n} from \"./constants.js\";\n\nexport const setSearchField = text => {\n  return {\n    type: CHANGE_SEARCH_FIELD,\n    payload: text\n  };\n};\n\nexport const requestRobots = () => dispatch => {\n  dispatch({ type: REQUEST_ROBOTS_PENDING });\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response => response.json())\n    .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\n    .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }));\n};\n","export const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\";\n\nexport const REQUEST_ROBOTS_PENDING = \"REQUEST_ROBOTS_PENDING\";\nexport const REQUEST_ROBOTS_SUCCESS = \"REQUEST_ROBOTS_SUCCESS\";\nexport const REQUEST_ROBOTS_FAILED = \"REQUEST_ROBOTS_FAILED\";\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport ErrorBoundry from \"../components/ErrorBoundry\";\nimport Scroll from \"../components/Scroll\";\nimport { setSearchField, requestRobots } from \"../actions\";\nimport \"./App.css\";\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: e => dispatch(setSearchField(e.target.value)),\n    onRequestRobots: () => requestRobots(dispatch(requestRobots()))\n  };\n};\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onRequestRobots();\n  }\n\n  render() {\n    const { searchField, onSearchChange, robots, isPending } = this.props;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return isPending ? (\n      <h1 className=\"tc\">Loading</h1>\n    ) : (\n      <div className=\"tc\">\n        <h1 className=\"f1\">RoboFriends</h1>\n        <SearchBox searchChange={onSearchChange} />\n        <Scroll>\n          <ErrorBoundry>\n            <CardList robots={filteredRobots} />\n          </ErrorBoundry>\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { searchRobots, requestRobots } from \"./reducers\";\nimport App from \"./containers/App\";\nimport \"./index.css\";\nimport \"tachyons\";\n\nconst logger = createLogger();\n\nconst rootReducer = combineReducers({ searchRobots, requestRobots });\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunkMiddleware, logger)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}